// Generated by view binder compiler. Do not edit!
package com.example.productAPIExtended.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.productAPIExtended.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemOrderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView btnIncrementMinus;

  @NonNull
  public final TextView btnIncrementPlus;

  @NonNull
  public final TextView iconDollars;

  @NonNull
  public final ImageView imageCard;

  @NonNull
  public final TextView nameProductCard;

  @NonNull
  public final TextView priceCard;

  @NonNull
  public final TextView productsCounter;

  private ItemOrderBinding(@NonNull LinearLayout rootView, @NonNull TextView btnIncrementMinus,
      @NonNull TextView btnIncrementPlus, @NonNull TextView iconDollars,
      @NonNull ImageView imageCard, @NonNull TextView nameProductCard, @NonNull TextView priceCard,
      @NonNull TextView productsCounter) {
    this.rootView = rootView;
    this.btnIncrementMinus = btnIncrementMinus;
    this.btnIncrementPlus = btnIncrementPlus;
    this.iconDollars = iconDollars;
    this.imageCard = imageCard;
    this.nameProductCard = nameProductCard;
    this.priceCard = priceCard;
    this.productsCounter = productsCounter;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_increment_minus;
      TextView btnIncrementMinus = ViewBindings.findChildViewById(rootView, id);
      if (btnIncrementMinus == null) {
        break missingId;
      }

      id = R.id.btn_increment_plus;
      TextView btnIncrementPlus = ViewBindings.findChildViewById(rootView, id);
      if (btnIncrementPlus == null) {
        break missingId;
      }

      id = R.id.icon_dollars;
      TextView iconDollars = ViewBindings.findChildViewById(rootView, id);
      if (iconDollars == null) {
        break missingId;
      }

      id = R.id.image_card;
      ImageView imageCard = ViewBindings.findChildViewById(rootView, id);
      if (imageCard == null) {
        break missingId;
      }

      id = R.id.name_product_card;
      TextView nameProductCard = ViewBindings.findChildViewById(rootView, id);
      if (nameProductCard == null) {
        break missingId;
      }

      id = R.id.price_card;
      TextView priceCard = ViewBindings.findChildViewById(rootView, id);
      if (priceCard == null) {
        break missingId;
      }

      id = R.id.productsCounter;
      TextView productsCounter = ViewBindings.findChildViewById(rootView, id);
      if (productsCounter == null) {
        break missingId;
      }

      return new ItemOrderBinding((LinearLayout) rootView, btnIncrementMinus, btnIncrementPlus,
          iconDollars, imageCard, nameProductCard, priceCard, productsCounter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
